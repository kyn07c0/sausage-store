#before_script:
#  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
#  - eval $(ssh-agent -s)
#  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
#  - mkdir -p ~/.ssh
#  - chmod 600 ~/.ssh
#  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
#  - chmod 644 ~/.ssh/known_hosts

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

include:
  - template: Security/SAST.gitlab-ci.yml

spotbugs-sast:
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository    

stages:
  - build
  - test
  - release
  - deploy

build:
  stage: build
  only:
    changes:
    - frontend/**/*
  script:
    - echo BUILD_FRONTEND_JOB_ID = $CI_JOB_ID >> job.env
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend
    reports:
      dotenv: job.env

sonarqube-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  needs:
    - build
  only:
    changes:
    - frontend/**/*
  script:
    - cd frontend
    - sonar-scanner
      -Dsonar.projectKey=${SONAR_PROJECT_FRONTEND_KEY}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_FRONTEND}
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectName=17_ЮРИЙКРЫВИНЯ_ФРОНТЕНД

release:
  stage: release
  only:
    changes:
    - frontend/**/*
  needs:
    - build
    - spotbugs-sast
    - sonarqube-sast
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/sausage-store-kryvinya-yuriy-frontend/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz

deploy:
  stage: deploy
  only:
    changes:
      - frontend/**/*
  needs:
    - release
  script:
    - ssh ${DEV_USER}@${DEV_HOST} "id" 
    #- scp ./frontend/sausage-store-frontend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-frontend.service
    #- ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s " < ./frontend/deploy.sh 

#telegram-notification:
#  stage: notify
#  only:
#    changes:
#    - frontend/**/*
#  script:
#    - 'curl -X POST -H "Content-type: application/json" --data "{\"chat_id\": \"-1001763459775\", \"text\": \"Вышла новая версия frontend сосисочной - ${VERSION}. Скачать frontend можно по ссылке — ${NEXUS_REPO_URL}/sausage-store-kryvinya-yuriy-frontend/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz \"}" https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage'
#  needs:
#    - upload-frontend-release
