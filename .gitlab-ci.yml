stages:
  - build
  - test
  - release

include:
  - template: Security/SAST.gitlab-ci.yml

spotbugs-sast:
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository # для хранения зависимостей бэкенда
    - .npm/ # для хранения зависимостей сборки фронтенда     

build-backend-code-job:
  stage: build  
  only:
    changes:
    - backend/*
  script:
    - echo BUILD_BACKEND_JOB_ID = $CI_JOB_ID >> job.env
    - cd backend
    - mvn package -Dmaven.repo.remote=${CI_PROJECT_DIR}/.m2/repository
  artifacts:
    paths:
      - backend/target/sausage-store-0.0.1-SNAPSHOT.jar
      - ${CI_PROJECT_DIR}/.m2/ 
    reports:
      dotenv: job.env

build-frontend-code-job:
  stage: build  
  only:
    changes:
    - frontend/*
  script:
    - echo BUILD_FRONTEND_JOB_ID = $CI_JOB_ID >> job.env    
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend
    reports:
      dotenv: job.env

sonarqube-backend-sast:
  stage: test
  image: maven:3.8-openjdk-16
  script:
    - cd backend
    - mvn verify sonar:sonar 
      -Dsonar.projectKey=${SONAR_PROJECT_BACKEND_KEY} 
      -Dsonar.host.url=${SONARQUBE_URL} 
      -Dsonar.login=${SONAR_LOGIN_BACKEND} 
      -Dsonar.qualitygate.wait=true 
      -Dsonar.projectName=17_ЮРИЙКРЫВИНЯ_БЭКЭНД
  needs:
    - build-backend-code-job

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - sonar-scanner 
      -Dsonar.projectKey=${SONAR_PROJECT_FRONTEND_KEY} 
      -Dsonar.sources=. 
      -Dsonar.host.url=${SONARQUBE_URL} 
      -Dsonar.login=${SONAR_LOGIN_FRONTEND} 
      -Dsonar.qualitygate.wait=true 
      -Dsonar.projectName=17_ЮРИЙКРЫВИНЯ_ФРОНТЕНД
  needs:
    - build-frontend-code-job

upload-backend-release:
  stage: release
  only:
    changes:
      - backend/**/*
  needs:
    - build-backend-code-job
  script:
    - cd backend
    - mvn -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -s settings.xml -Dversion.application=${VERSION} -DskipTests deploy 

upload-frontend-release:
  stage: release
  only:
    changes:
    - frontend/**/*
  needs:
    - build-frontend-code-job
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/sausage-store-kryvinya-yuriy-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz

telegram-notification-backend:
  stage: .post
  only:
    changes:
    - backend/*
  script:
    - 'curl -X POST -H "Content-Type: application/json" -d "{\"chat_id\": \"-1001763459775\", \"text\": \"Юрий Крывиня собрал и протестировал(SonarQube) backend. https://gitlab.praktikum-services.ru/api/v4/projects/$CI_PROJECT_ID/jobs/$BUILD_BACKEND_JOB_ID/artifacts?private_token=${SS_TOKEN}\"}" https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage'
  needs:
    - sonarqube-backend-sast

telegram-notification-frontend:
  stage: .post
  only:
    changes:
    - frontend/*
  script:
    - 'curl -X POST -H "Content-type: application/json" --data "{\"chat_id\": \"-1001763459775\", \"text\": \"Юрий Крывиня собрал и протестировал(SonarQube) frontend. https://gitlab.praktikum-services.ru/api/v4/projects/$CI_PROJECT_ID/jobs/$BUILD_FRONTEND_JOB_ID/artifacts?private_token=${SS_TOKEN}\"}" https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage'
  needs:
    - sonarqube-frontend-sast
