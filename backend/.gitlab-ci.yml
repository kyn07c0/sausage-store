#cache:
#  paths:
#    - ${CI_PROJECT_DIR}/.m2/repository

variables:
   VERSION: 1.0.${CI_PIPELINE_ID}
   MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
   JAVA_OPTS: -XX:MaxRAMPercentage=90 # для того, чтобы Maven не съел всю свободную оперативку

include:
  - template: Security/SAST.gitlab-ci.yml

spotbugs-sast:
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${MAVEN_REPO_PATH}

stages:
   - build
   - test
   - release
   - deploy
#   - notify
   
build:
  stage: build
  only:
    changes:
    - backend/**/*
  script:
    - echo BUILD_BACKEND_JOB_ID = $CI_JOB_ID >> job.env
    - cd backend
    - mvn package -Dmaven.repo.local=${MAVEN_REPO_PATH} -Dversion.application=${VERSION}
  artifacts:
    paths:
      - backend/target/sausage-store-${VERSION}.jar
      - ${CI_PROJECT_DIR}/.m2/
    reports:
      dotenv: job.env

sonarqube-sast:
  stage: test
  image: maven:3.8-openjdk-16
  needs:
    - build
  only:
    changes:
    - backend/**/*  
  script:
    - cd backend
    - mvn verify sonar:sonar
      -Dsonar.projectKey=${SONAR_PROJECT_BACKEND_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_BACKEND}
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectName=17_ЮРИЙКРЫВИНЯ_БЭКЭНД      

release:
  stage: release
  only:
    changes:
      - backend/**/*
    needs:
      - build
      - spotbugs-sast
      - sonarqube-sast     
    script:
      - cd backend
      - mvn deploy -DskipTests -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH} -s settings.xml
   rules:
      - changes:
           - backend/**/* 

deploy:
  stage: deploy
  only:
    changes:
      - backend/**/*
    needs:
      - release
  script:
    - scp ./backend/sausage-store-backend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-backend.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s " < ./backend/deploy.sh 

#telegram-notification:
#  stage: notify
#  only:
#    changes:
#      - backend/**/*
#  script:
#    - 'curl -X POST -H "Content-Type: application/json" -d "{\"chat_id\": \"-1001763459775\", \"text\": \"Вышла новая версия backend сосисочной - ${VERSION}. Скачать backend можно по ссылке — ${NEXUS_REPO_URL}/sausage-store-kryvinya-yuriy-backend/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar \"}" https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage'
#  needs:
#    - upload-backend-release
